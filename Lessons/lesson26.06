Лекция 26.06

DDL - команды

Data definition language - команды, направленные на создание, изменение или удаление сущностей БД, то есть таблиц. Например, команда create table - команда группы DDL.

Команды, которые работают непосредственно с данными, например, select, insert, update, то есть все, которые относятся к изменению, фильтрации и выбору внутри уже существующих таблиц - это команды группы DML -  data manipulation language команды.

Есть еще группа TCL - transaction control language , которые отвечают за выполнение транзакций.

Создаем БД factory:

create database factory;

Обращаемся к этой БД:

use factory;

Создаем таблицу в factory (команда DDL):
create table employees (

id int,  // целочисленное поле

first_name varchar(225),    //поле имя - строка, вмещающая 225 символов максимально

last_name varchar(225)

age int,

salary int

);

Заполняем эту пустую таблицу данными, для этого используем DML -команду insert:

select from employees;

insert into employees values (1, ‘Alex’, ‘Alexeev’, 25, 10000);

В скобках обязательно придерживаемся того порядка значений, который был определен при создании колонок таблицы командой ранее.

Результатом работы этой команды будет одна строка, которая добавится в таблицу.

Также можно сделать множественное заполнение, то есть перечислить через запятую значения сразу для нескольких строк, которые мы хотим вставить в таблицу:

insert into employees values (2, ‘Oleg’, ‘Olegov’, 30, 20000),

                                               (3, ‘Maxim’, ‘Maximov’, 25, 10000),

                                                (4, ‘Petr’, ‘Petrov’, 41, 250000);

Здесь также обязательно придерживаемся именно такого порядка, в котором были заданы колонки таблицы при создании

Если мы хотим изменить порядок заполнения, в этом случае мы должны указать поля, которые будем заполнять:

insert into employees (first_name, last_name, id, age) 

values (’Andrew’, ‘Andreev’, 5, 15);

При этом в тех полях, которые мы не указали и для которых не прописали значения, будет установлено значение null

Команда update - отвечает за изменение уже существующих данных. При применении update важно помнить про условие where, по которому нужно выбрать строку, поле которой мы хотим проапдейтить. Если не прописать условие, то проапдейтятся вообще все строки таблицы.

DML - команду update используем, когда необходимо установить новое значение в определенную колонку (колонки) в соответствии с условием:

// если при запросе с update выдает ошибку , то пишем команду :
set sql_safe_updates = 0;

update employees

set salary = 5000

where id = 5;

//  изменяем значение поля salary в строке с id = 5

update employees

set salary = 7000, age = 30

where id is null;

//изменяем значения сразу для двух колонок, прописывая их через запятую

Изменяем ЗП у всех работников на +5000:

update employees

set salary = salary + 5000;

Команды удаления

Команда delete  // группа DML

Команда truncate  // группа DDL

delete позволяет удалить все значения построчно, но при этом можно также построчно восстановить все удаленные прежде значения. Удаление каждой строки происходит в отдельной транзакции.

truncate - сразу полностью вычищает всю таблицу в одной транзакции, работает быстро, но после нее невозможно восстановить данные, команда необратима

Удаляем сотрудника из таблицы:

delete from employees

where id = 5;

Создаем еще одну таблицу на основе таблицы employees (временная таблица)

create table tmp_employees as

select from employees;

// при этом значения будут скопированы из таблицы employees

Удаляем все из временной таблицы:

delete from tmp_employees;

Команда truncate не имеет никаких параметров:

select * from tmp_employees;

truncate table tmp_employees;

Создаем таблицу на основе уже существующей таблицы, но помещаем в нее только некоторые поля из существующей таблицы:

create table tmp_employees_two as

select age, salary

from employees;

Удалить таблицу

drop table <имя таблицы>

drop table if exists <имя таблицы>  // удалить таблицу, если она существует

Изменение сущностей таблицы, то есть удаление или создание столбцов:

alter table // DDL  - команда

Добавляем в таблицу столбец address:

select * from employees;

alter table employees

add address varchar(250);

Удаляем только что созданный столбец:

alter table employees

drop column address;

// при этом удаляется колонка со  всеми данными

Переименовать таблицу - команда rename:

rename table good to goods;

Ключевое слово default можно использовать при создании полей таблицы, чтобы задать значения по умолчанию:

alter tabler goods

add price int default 0;

Команда изменения колонки (изменение типа значения)  - modify

Изменить поле (поменять тип данных на другой) - сначала необходимо убрать все значения из поля (заменить на null):

update goods

set price = null;

alter table goods

modify price numeric(8,2);

// numeric - дробный тип данных

Переименовать столбец таблицы:

alter table employees

change name first_name;
